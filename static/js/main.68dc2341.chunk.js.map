{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.jsx","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css"],"names":["Section","title","children","className","s","section","FeedbackOptions","options","onFeedbackClick","list","map","item","index","type","btn","onClick","Statistics","good","neutral","bad","total","positiveFeedbacks","Notification","message","App","state","handleIncrement","key","setState","prevState","Object","values","this","reduce","acc","value","summFeedbacks","countTotalFeedback","goodFeedbacksAmount","Math","round","totalFeedbacks","keys","countPositivePercentage","Component","ReactDOM","render","StrictMode","document","querySelector","module","exports"],"mappings":"wQAgBeA,MAbf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACtB,OACI,0BAASC,UAAWC,IAAEC,QAAtB,UACI,6BAAKJ,IACJC,M,gBCqBEI,MAzBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAChC,OACI,oBAAIL,UAAWC,IAAEK,KAAjB,SACKF,EAAQG,KAAI,SAACC,EAAMC,GAAP,OACX,6BACE,wBACEC,KAAK,SACLV,UAAS,UAAKC,IAAEU,IAAP,YAAcV,IAAEO,IACzBI,QAAW,WACXP,EAAgBG,IAJlB,SAOGA,KARIC,SCqBRI,MA1Bf,YAMI,IALAC,EAKD,EALCA,KACAC,EAID,EAJCA,QACAC,EAGD,EAHCA,IACAC,EAED,EAFCA,MACAC,EACD,EADCA,kBAEA,OACI,+BACI,wCAAWJ,EAAX,OACA,2CAAcC,EAAd,OACA,uCAAUC,EAAV,OACA,yCAAYC,EAAZ,OACA,qDAAwBC,EAAxB,YCLGC,MARf,YAAkC,IAAXC,EAAU,EAAVA,QAClB,OAAO,4BAAIA,KCIVC,E,4MACJC,MAAQ,CACRR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGLO,gBAAkB,SAAAC,GAChB,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJF,EAAME,EAAUF,GAAO,O,wDAK9B,WAGE,OAFgBG,OAAOC,OAAOC,KAAKP,OACHQ,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,K,qCAIrE,WACC,IAAMC,EAAgBJ,KAAKK,qBACrBC,EAAsBN,KAAKP,MAAMR,KACvC,OAAOsB,KAAKC,MAA6B,IAAtBF,EAA6BF,K,oBAGlD,WACG,IAAMK,EAAiBT,KAAKK,qBAC5B,OACI,qCACA,cAAC,EAAD,CAASpC,MAAM,wBAAf,SACE,cAAC,EAAD,CACCM,QAASuB,OAAOY,KAAKV,KAAKP,OACzBjB,gBAAiBwB,KAAKN,oBAG1B,cAAC,EAAD,CAASzB,MAAM,aAAf,SACEwC,EACC,cAAC,EAAD,CACExB,KAAMe,KAAKP,MAAMR,KACjBC,QAASc,KAAKP,MAAMP,QACpBC,IAAKa,KAAKP,MAAMN,IAChBC,MAAOqB,EACPpB,kBAAmBW,KAAKW,4BAG1B,cAAC,EAAD,CAAcpB,QAAQ,kC,GA/ChBqB,aAsDHpB,I,YCvDfqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,cAAc,W,kBCTzBC,EAAOC,QAAU,CAAC,KAAO,8BAA8B,IAAM,6BAA6B,KAAO,8BAA8B,IAAM,6BAA6B,QAAU,mC,kBCA5KD,EAAOC,QAAU,CAAC,QAAU,4B","file":"static/js/main.68dc2341.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport s from './Section.module.css'\r\n\r\nfunction Section({ title, children }) {\r\n    return (\r\n        <section className={s.section}>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </section>\r\n    )\r\n}\r\n\r\nSection.propTypes = {\r\n     title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Section","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css'\r\n\r\nfunction FeedbackOptions({ options, onFeedbackClick }) {\r\n    return (\r\n        <ul className={s.list}>\r\n            {options.map((item, index) => (\r\n              <li key={index}>\r\n                <button\r\n                  type='button'\r\n                  className={`${s.btn} ${s[item]}`}\r\n                  onClick = {() => {\r\n                  onFeedbackClick(item);\r\n                }}\r\n                >\r\n                  {item}    \r\n                </button>\r\n              </li>    \r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onFeedbackClick : PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions","import PropTypes from 'prop-types';\r\n\r\nfunction Statistics({\r\n    good,\r\n    neutral,\r\n    bad,\r\n    total,\r\n    positiveFeedbacks \r\n}) {\r\n    return (\r\n        <ul>\r\n            <li>Good: {good} </li>\r\n            <li>Neutral: {neutral} </li>\r\n            <li>Bad: {bad} </li>\r\n            <li>Total: {total} </li>\r\n            <li>Positive feedback: {positiveFeedbacks}% </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positiveFeedbacks: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics","import PropTypes from 'prop-types';\r\n\r\nfunction Notification({message}) {\r\n     return <p>{message}</p>    \r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification","import { Component } from 'react';\n\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n  good: 0,\n  neutral: 0,\n  bad: 0\n  }\n  \n  handleIncrement = key => {\n    this.setState(prevState => {\n      return {\n        [key]: prevState[key] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback() {\n    let valuesArr = Object.values(this.state);\n    const summFeedbacks = valuesArr.reduce((acc, value) => acc + value, 0);\n    return summFeedbacks;\n  }\n\n   countPositivePercentage() {\n    const summFeedbacks = this.countTotalFeedback();\n    const goodFeedbacksAmount = this.state.good;\n    return Math.round((goodFeedbacksAmount * 100) / summFeedbacks);\n  }\n\n  render() {\n     const totalFeedbacks = this.countTotalFeedback();\n     return (\n         <>\n         <Section title=\"Please leave feedback\">\n           <FeedbackOptions\n            options={Object.keys(this.state)}\n             onFeedbackClick={this.handleIncrement}\n          />\n         </Section>\n         <Section title=\"Statistics\">\n          {totalFeedbacks ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={totalFeedbacks}\n              positiveFeedbacks={this.countPositivePercentage()}\n            />\n          ) : (\n            <Notification message=\"There is no feedback\" />\n          )}\n        </Section>\n         </>\n     );\n}}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__2a6Fm\",\"btn\":\"FeedbackOptions_btn__3MIS2\",\"good\":\"FeedbackOptions_good__28P5t\",\"bad\":\"FeedbackOptions_bad__IlshL\",\"neutral\":\"FeedbackOptions_neutral__219w0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__11aGc\"};"],"sourceRoot":""}